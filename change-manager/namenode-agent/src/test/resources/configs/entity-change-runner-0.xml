<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
  ~ Copyright(C) (2023) Sapper Inc. (open.source at zyient dot io)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<configuration>
    <env>
        <name>DEV</name>
        <module>hadoop-cdc</module>
        <instance>EntityChangeDeltaReader/0</instance>
        <source>ha-cluster</source>
        <enableHeartbeat>true</enableHeartbeat>
        <paths>
            <connections>config</connections>
            <registry>/ai/sapper/cdc/registry</registry>
            <root>/ai/sapper/cdc</root>
        </paths>
        <managers>
            <state>
                <stateManagerClass>ai.sapper.cdc.core.state.KafkaProcessingStateManager</stateManagerClass>
                <basePath>ha-cluster</basePath>
                <connection>zk-state-connection</connection>
                <fileState>true</fileState>
                <offsets>
                    <offsetManager>
                        <name>EditsDeltaQueueOffset</name>
                        <type>ai.sapper.cdc.core.messaging.kafka.KafkaStateManager</type>
                        <connection>zk-state-connection</connection>
                        <basePath>kafka</basePath>
                    </offsetManager>
                </offsets>
            </state>
            <schema>
                <name>HDFSSchemaManager</name>
                <persistence>
                    <handler>
                        <class>ai.sapper.cdc.entity.manager.HCdcZkSchemaHandler</class>
                        <settings>ai.sapper.cdc.entity.manager.zk.ZKSchemaDataHandlerSettings</settings>
                    </handler>
                    <connection>zk-state-connection</connection>
                    <schema>hdfs</schema>
                </persistence>
                <hdfs>source-hdfs-ha</hdfs>
            </schema>
        </managers>
        <fs>
            <zkPath>/test/filesystem/admin</zkPath>
            <zkConnection>zk-state-connection</zkConnection>
            <autoSave>true</autoSave>
            <overwrite>true</overwrite>
            <fileSystems>
                <fileSystem>
                    <type>ai.sapper.cdc.core.io.impl.local.LocalFileSystem</type>
                    <name>hadoop-cdc-fs</name>
                    <tmp>
                        <path>/tmp/hadoop-cdc/fs/</path>
                        <clean>true</clean>
                    </tmp>
                    <compressed>true</compressed>
                    <zk>
                        <connection>zk-state-connection</connection>
                        <path>/ai/sapper/cdc/registry</path>
                    </zk>
                    <containers>
                        <container>
                            <domain>ha-cluster</domain>
                            <path>/home/subhagho/temp/data/hadoop-cdc/fs/ha-cluster</path>
                        </container>
                        <default>ha-cluster</default>
                    </containers>
                </fileSystem>
            </fileSystems>
        </fs>
        <agent>
            <needHadoop>false</needHadoop>
            <processor>
                <name>EntityChangeDeltaReader/0</name>
                <class>ai.sapper.hcdc.agents.pipeline.impl.KafkaEntityChangeDeltaReader</class>
                <cdc>
                    <hdfs>source-hdfs-ha</hdfs>
                    <fileSystem>hadoop-cdc-fs</fileSystem>
                    <sender>
                        <builder>
                            <type>ai.sapper.cdc.core.messaging.HCDCSenderBuilder</type>
                            <settingsType>ai.sapper.cdc.core.messaging.kafka.builders.KafkaProducerSettings
                            </settingsType>
                        </builder>
                        <type>kafka</type>
                        <connection>producer-delta-files-queue</connection>
                        <!--partitioner></partitioner-->
                    </sender>
                    <queue>
                        <builder>
                            <type>ai.sapper.cdc.core.messaging.HCDCReceiverBuilder</type>
                            <settingsType>ai.sapper.cdc.core.messaging.builders.MessageReceiverSettings</settingsType>
                        </builder>
                        <type>kafka</type>
                        <connection>consumer-delta-queue</connection>
                        <offset>
                            <manager>EditsDeltaQueueOffset</manager>
                        </offset>
                    </queue>
                    <errors>
                        <builder>
                            <type>ai.sapper.cdc.core.messaging.HCDCSenderBuilder</type>
                            <settingsType>ai.sapper.cdc.core.messaging.kafka.builders.KafkaProducerSettings
                            </settingsType>
                        </builder>
                        <type>kafka</type>
                        <connection>producer-errors-files-queue</connection>
                        <!--partitioner></partitioner-->
                    </errors>
                    <readBatchTimeout>5000</readBatchTimeout>
                    <snapshot>
                        <client>
                            <name>snapshot</name>
                            <connection>snapshot</connection>
                            <paths>
                                <snapshotDone>/done</snapshotDone>
                            </paths>
                            <retryCount>2</retryCount>
                        </client>
                    </snapshot>
                </cdc>
            </processor>
            <useSSL>false</useSSL>
            <!--audit>
                <class>ai.sapper.cdc.common.audit.DefaultAuditLogger</class>
            </audit -->
        </agent>
        <locks>
            <connection>zk-state-connection</connection>
        </locks>
        <config>
            <connections>
                <shared>
                    <connection>zk-state-connection</connection>
                </shared>
                <connection>
                    <class>ai.sapper.cdc.core.connections.ZookeeperConnection</class>
                    <zookeeper>
                        <name>zk-state-connection</name>
                        <!--connectionString>192.168.0.5:2181,192.168.0.4:2181</connectionString -->
                        <connectionString>192.168.2.16:2181,192.168.2.17:2181,192.168.2.18:2181</connectionString>
                        <retry>
                            <interval>1500</interval>
                            <retries>5</retries>
                        </retry>
                        <connectionTimeout>10000</connectionTimeout>
                    </zookeeper>
                </connection>
            </connections>
        </config>
    </env>
</configuration>